# -*- coding: utf-8 -*-
"""Datacamp.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mwlXO0LHXcHrhxCG4Ft08xG4v-_-ZPOu

# Import Library and File
"""

pip install --user currencyconverter

pip install dataprep

#import thư viện
import pandas as pd
import numpy as np
import matplotlib as plt
import matplotlib.pyplot as plt
import seaborn as sns 
import datetime as dt
import matplotlib.ticker
from currency_converter import CurrencyConverter
from dataprep.clean import validate_country
from dataprep.clean import clean_country
from geopy import geocoders
from geopy.geocoders import Nominatim

print('Completed import lib')

#read file
df = pd.read_csv('/content/boat_data.csv')

"""# Info"""

df.head()

#Info of dataset

df.info()

df.describe()

#Check unique values
df.nunique()

#Checking duplicate data
df[df.duplicated()]

"""# Null Values"""

#Checking null Values
df.isnull().sum()

#% Null values
dict_null = dict()
for i in df.columns:
  dict_null[i] = df[i].isnull().sum()/len(df['Price'])*100
df1 = pd.DataFrame.from_dict(dict_null.items())
print(df1)

#Fill Null Value of Manufacturer, Material, Location, Type
values_replace = {'Manufacturer':'unspecified','Material':'unspecified','Location':'Unknow','Type':'unspecified'}
df.fillna(value = values_replace, inplace = True)

#check again
df.isnull().sum()

#Fill Null Value with mean of length and width 

length_mean = df['Length'].mean()
width_mean = df['Width'].mean()
df = df.fillna({'Length' :length_mean ,'Width' :width_mean })
df.isnull().sum()

"""# Price Column"""

#Slit Price column into to two column currency and price
df[['currency','price']] = df.Price.str.split(expand = True)
df.head()

#Check Unique variable
df['currency'].unique()

#Replace currency to GBP
df = df.replace('Â£','GBP')

#Histogram of currency
df['currency'].hist()

#Convert all to EUR
df['price'] = df['price'].astype('int64')
c = CurrencyConverter()

def currency_convertor(row,new_currency='EUR'):
 amount = row['price']
 curr = row['currency']
 new_curr = c.convert(amount,curr,new_currency)
 return new_curr

df['Price'] = df.apply(lambda x: currency_convertor(x,new_currency="EUR"), axis=1).astype('int64')

#Drop column currency and price
df = df.drop(columns=['currency', 'price'])

df.head()

"""# Boat Type Column"""

df['Boat Type'].unique()

df[['Boat Type - 1st','Boat Type - 2nd', 'Boat Type - 3rd']] = df['Boat Type'].str.split(",",expand=True)
print(df[['Boat Type - 1st','Boat Type - 2nd', 'Boat Type - 3rd']])

"""# Type Column"""

df[['Condition', 'Engine']] = df['Type'].str.split(",",expand=True)
print(df[['Condition', 'Engine']])

"""# Price Column

"""

sns.displot(df['Price'], bins = 20)

df['Price'].quantile([0.25,0.5,0.75])

Price_group = pd.cut(df['Price'],bins=[-1,50001,150001,300001,1000001,31000000],labels=['Lower_50K', '50K-150K','150K-300K', '300K-1M', 'Higher_1M'])
df.insert(15,'Price Group',Price_group)

print(df['Price Group'])

"""# Age Column"""

df['Age'] = 2022 - df['Year Built']
df['Age'] = df['Age'].replace(2022, 0) # Replace 2022 with 0

df['Age'].quantile([0.25,0.5,0.75])

category_age = pd.cut(df['Age'],bins=[-1,6,16,31,51,101,137],labels=['0-5 years', '6-15 years','16-30 years', '31-50 years', '51-100 years', '101+ years'])
df.insert(16,'Age Group',category_age)
df['Age Group']

"""# Location Column"""

df['Location'] = df['Location'].replace('United','United Kingdom')
df['Location'] = df['Location'].replace('Slovak','Slovakia')

srs = validate_country(df["Location"])
df[~validate_country(df["Location"])]

df = df[validate_country(df["Location"])]
print(df.info())

"""# View Column


"""

sns.distplot(df['Number of views last 7 days'], bins=20)

df['Number of views last 7 days'].quantile([0.25,0.5,0.75])

pv_category = pd.cut(df['Number of views last 7 days'],bins=[-1,71,111,176,1001,3263],labels=['Low', 'Medium','More than avergae', 'Good', 'Best'])
df.insert(17,'PV Group',pv_category)

print(df['PV Group'])

"""# Save File"""

df.to_csv('data_new_boat_1.csv')